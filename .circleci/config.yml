# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
# TOM TOM
version: 2
jobs:
  build:
    working_directory: ~/fz-backend
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-apache-stretch-node-browsers
        environment:
          APP_ENV: test
          DATABASE_URL: mysql://root:root@127.0.0.1/fz-backend
          MAILER_FROM: tom@home.com
          MAILER_URL: null://localhost
      - image: circleci/mysql:5.7.24
        environment:
          MYSQL_ROOT_PASSWORD: 'root'
          MYSQL_DATABASE: fz-backend

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run:
          name: Update apt
          command: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run:
          name: Install PHP MySQL
          command: sudo docker-php-ext-install pdo_mysql
      - run:
          name: Wait for MySQl
         command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Composer
          command: sudo composer self-update
      - run:
          name: Composer Install
          command: composer install -n --prefer-dist
      - run:
          name: Doctrine Migrations
          command: php bin/console doctrine:migrations:migrate --env=test --no-interation

      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            # "composer.lock" can be used if it is committed to the repo
#            - v1-dependencies-{{ checksum "composer.json" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-
#
#      - run: composer install -n --prefer-dist
#
#      - save_cache:
#          key: v1-dependencies-{{ checksum "composer.json" }}
#          paths:
#            - ./vendor
#      - restore_cache:
#          keys:
#            - node-v1-{{ checksum "package.json" }}
#            - node-v1-
#      - run: yarn install
#      - save_cache:
#          key: node-v1-{{ checksum "package.json" }}
#          paths:
#            - node_modules
#
#      # prepare the database
#      - run: touch storage/testing.sqlite
#      - run: php artisan migrate --env=testing --database=sqlite_testing --force
#
#      # run tests with phpunit or codecept
#      #- run: ./vendor/bin/phpunit
#      - run: ./vendor/bin/codecept build
#      - run: ./vendor/bin/codecept run
